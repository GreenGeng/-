package summary.thread;

public class Summary2 {
    /**
     *  为什么设计CPU缓存
     *  解决CPU运算速度与内存读写速度不匹配的问题，CPU就要花时间等内存传输数据
     *  CPU缓存存储主存中经常使用的数据和指令
     *   L1最快 越靠近CPU 速度越快 容量越小
     *   容量小提高命中率
     *
     *  volatile怎么保证禁止重排序
     * 使用volatile关键字的时候 会出现lock前缀的指令
     * 这个指令相当于一个内存屏障
     * 作用是不会把后面的指令排在内存屏障之前
     * 不会把前面的指令排在内存屏障之后
     * 他会强制把值刷到主内存
     *
     *
     *
     *  为什么要禁止重排序
     *  禁止CPU执行指令的时候重排
     *  避免在多线程环境下程序出现错乱执行的现象
     *
     *
     *
     *
     *
     */
}
