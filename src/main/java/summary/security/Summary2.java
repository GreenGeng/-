package summary.security;

public class Summary2 {
    /**
     * SQL 注入
     * 一般笼统的称为数字型和字符串型
     * 详细可分为：联合查询、报错注入、时间盲注、布尔盲注等
     * 满足SQL注入的条件：
     * 1 输入可控
     * 2 直接或间接拼接SQL
     *
     * SQL审计：
     * 根据select 或者update等SQL关键字或者是通过执行SQL语句定位到SQL片段
     * 查看SQL语句中是否存在变量引用并跟踪变量是否可控
     * 只有当传进来的参数是String 才可能进行SQL注入
     *
     * Preparestatement里的？占位符是通过SetXXX的方式赋值的
     * SQL语句编译的时候 执行计划会被缓存起来 使用预编译语句比普通语句更快
     *
     * 使用的时候都需要注意
     * like 使用concat拼接
     * in 使用foreach
     * order by 后面的字符如果加了引号就不会被识别为字段 而是普通字符串了 这样order by就会失效
     *
     *
     * #{}底层就是使用？作为占位符来生成preparestatement
     *
     * 常见关键字
     * Statement、createStatement、PrepareStatement、like $、in($、等
     *
     * 二次注入
     *
     * 防护
     * 预编译
     * orderby需要手动过滤
     * 因为SQL注入基本上都是因为String类型的参数导致的
     * 可以类型转换 为Int类型等也可避免注入
     *
     * =======================================================================
     *
     * 一般测试框架的测试程序
     * 1、身份鉴别管理测试
     * 角色定义测试、用户注册测试、账号权限变化测试、账号枚举测试、若用户名策略测试
     * 2、认证测试
     * 口令信息加密传输测试、默认口令测试、账号锁定机制测试、认证绕过测试、记住密码功能测试、浏览器缓存弱点测试、密码策略测试、密码重置测试
     * 3、授权测试
     * 目录遍历/文件包含测试、授权绕过测试、权限提升测试
     * 4、会话管理测试
     * 会话管理绕过测试、会话固定测试、CSRF测试、会话超时测试
     * 5、输入验证
     * XSS、HTTP参数污染测试、SQL注入测试、LDAP测试、XML注入、SSI注入、XPath注入、SMTP注入、代码注入、RCE、缓冲区溢出测试、HTTP伪造测试
     * 6、错误处理测试
     * 错误码分析、栈追踪分析
     * 7、密码学测试
     * Padding Oracle测试、非加密信道传输敏感数据测试
     * 8、业务逻辑测试
     * 请求伪造能力测试、完整性测试、过程时长测试、功能使用次数限制测试、流程绕过测试、非预期文件类型上传测试、恶意文件上传测试
     * 9、客户端测试
     * DOM XSS、HTML注入、URL重定向、
     *
     *审计过程
     * 1、输入验证
     * 关键状态数据外部可控、数据真实性验证（检查数据源或通信源、检查是否存在未验证或不正确验证数据的数字签名）
     * 绕过数据净化和验证：检查字符串在查找、替换、比较等操作时候是否存在大小写问题被绕过的情况
     * 字符串验证前未进行过滤、检查HTTP头中web脚本特殊元素
     * 命令行注入、忽略字符串结尾符（字符串不以结尾符结束会造成字符串越界访问）
     * 除0错误、边界值检查缺失、无法执行的死代码、死循环代码
     * 2、输出编码
     * XSS（输入的数据进行展示前应该编码 ）
     * URL重定向 ：检查重定向的站点情况
     *
     *
     * 数据加密
     * 密码安全、随机数安全
     *
     * 数据保护
     * 敏感信息暴露问题
     *
     *
     * 访问控制
     * 1、身份鉴别
     * 身份鉴别过程中暴露多余信息、身份鉴别被绕过、身份鉴别尝试频率限制、多因素认证（口令、验证码）
     *
     * 口令安全
     * 登陆口令、明文存储口令、明文传递口令
     *
     * 权限管理
     * 权限访问控制
     *
     * 文件管理
     * 过期的文件描述符（被引用其他文件）、不安全的临时文件、路径遍历、及时释放文件资源
     *
     * 网络传输
     * 端口多重绑定、消息容量控制（防止DDOS）、
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     */
}
